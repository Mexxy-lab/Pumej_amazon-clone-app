pipeline {
    agent any

    options {
        timeout(time: 10, unit: 'MINUTES')
    }

    environment {
        ECR_NAME = "pumejrepo"
        registyUrl = "598189530267.dkr.ecr.ap-south-1.amazonaws.com"
        IMAGE_TAG = "v1.0"
    }

    stages {
        stage('SCM Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Mexxy-lab/Pumej_amazon-clone-app.git'
            }
        }

        stage('Build Docker image') {
            steps {
                script {
                    sh """
                        docker build --network=host -t ${registyUrl}/${ECR_NAME}:${IMAGE_TAG} .
                    """
                }

            }
        }
        stage('Trivy Scan (Aqua)') {
            steps {
                script {
                    sh """
                    echo "üîç Running Trivy vulnerability scan..."

                    trivy image \
                      --scanners vuln \
                      --severity HIGH,CRITICAL \
                      --timeout 5m \
                      --exit-code 1 \
                      --format table \
                      ${registyUrl}/${ECR_NAME}:${IMAGE_TAG}
                    """
                }
            }
        }
        stage('Upload Image to Amazon Container Repository') {
            steps {
                script {
                    docker.withRegistry("https://${registyUrl}", 'ecr:ap-south-1:pumejawsecr') {
                        sh "docker push ${registyUrl}/${ECR_NAME}:${IMAGE_TAG}"
                    }
                }
            }
        }

        stage('Trigger ManifestUpdate') {
            steps {
                build job: 'argocd-manifest-amazon', parameters: [
                    string(name: 'DOCKERTAG', value: env.BUILD_NUMBER)
                ]
            }
        }
    }

    post {
        always {
            script {
                sh 'echo "‚úÖ Build Deployed Successfully, downstream job triggered!"'
            }
        }
    }
}
