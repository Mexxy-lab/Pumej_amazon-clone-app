pipeline {
    agent any

     options {
        timeout(time: 10, unit: 'MINUTES')
     }
    environment {
    ACR_NAME = "pumejrepo"
    registyUrl = "598189530267.dkr.ecr.ap-south-1.amazonaws.com"
    IMAGE_NAME = "pumej_amazon-webapp"
    IMAGE_TAG = "v1.0"
    }
    stages {
        stage('SCM Checkout') {
            steps{
           git branch: 'main', url: 'https://github.com/Mexxy-lab/Pumej_amazon-clone-app.git'
            }
        }
        // run sonarqube test
        stage('Run Sonarqube') {
            environment {
                scannerHome = tool 'ibt-sonarqube';
            }
            steps {
              withSonarQubeEnv(credentialsId: 'ibt-sonar', installationName: 'IBT sonarqube') {
                sh "${scannerHome}/bin/sonar-scanner"
              }
            }
        }
       // Building Docker Image
       stage ('Build Docker image') {
        steps {
                script {
                    //dockerImage = docker.build registryUrl
                 def dockerImage = docker.build("${registyUrl}/${IMAGE_NAME}:${IMAGE_TAG}", '.')
                }
            }
       }
    // Uploading Docker images into Amazon CR
        stage('Upload Image to ACR') {
         steps{
             script {
                 docker.withRegistry( "http://${registyUrl}", 'ecr:ap-south-1:pumejawsacr' ) {
               // dockerImage.push()
              sh "docker push ${registyUrl}/${IMAGE_NAME}:${IMAGE_TAG}"
                  }
              }
         }
      }
    }
}